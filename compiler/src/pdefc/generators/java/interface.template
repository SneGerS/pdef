// {{ generated_by }}
package {{ package }};

import com.google.common.base.Supplier;

import io.pdef.types.DataType;
import io.pdef.types.Type;
import io.pdef.types.Types;
import io.pdef.types.InterfaceType;
import io.pdef.types.InterfaceMethod;
import io.pdef.types.MessageType;

{% macro render_method(method) %}
            .addMethod(InterfaceMethod.builder()
                    .setName("{{ method.name }}")
                    {% if method.is_index %}
                    .setIndex(true)
                    {% endif %}
                    {% if method.is_post %}
                    .setPost(true)
                    {% endif %}
                    .setResult(new Supplier<Type>() {
                        public Type get() { return {{ method.result.descriptor }}; }
                    })
                    {% for arg in method.args %}
                    .addArg("{{ arg.name }}", new Supplier<DataType>() {
                        public DataType get () { return {{ arg.type.descriptor }}; }
                    })
                    {% endfor %}
            )
{% endmacro %}

{% if doc %}
/** {{ doc }} */
{% endif %}
{% if not base -%}
    public interface {{ name }} {
{% else -%}
    public interface {{ name }} extends {{ base }} {
{% endif %}

{% for method in declared_methods %}
    {% if method.doc %}
    /** {{ method.doc|indent(4) }} */
    {% endif %}
    {{ method.result }} {{ method.name }}(
        {%- for arg in method.args -%}
                {{ arg.type }} {{ arg.name }}
                {%- if loop.length > 1 and not loop.last %}, {% endif %}
        {%- endfor %});

{% endfor %}
    static InterfaceType TYPE = InterfaceType.builder()
            .setJavaClass({{ name }}.class)
            {% if exc %}
            .setExc(new Supplier<MessageType>() {
                public MessageType get() { return {{ exc.descriptor }}; }
            })
            {% endif %}
            {% for method in declared_methods -%}{{ render_method(method) }}{% endfor %}
            .build();
}

