module io.pdef.test;

enum ObjectType {
    OBJECT, USER, POST, PHOTO, NOTE, EVENT
}

message Response {
    success     bool;
    result      object;
}

message GenericObject {
    id          string;
    type        ObjectType, discriminator;
    timestamp   int64;
}

message User : GenericObject(ObjectType.USER) {
    isActive    bool;
    name        string;
    age         int32;
    sex         Sex;
    profile     Profile;
    floats      map<string, float>;
    chats       list<Chat>;
    shorts      map<int16, int64>;
    ints        set<int32>;
    weight      double;      
}

message Post : GenericObject(ObjectType.POST) {
    userId      string;
}

message Photo : Post(ObjectType.PHOTO) {
    url         string;
}

message Note : Post(ObjectType.NOTE) {
    text        string;
}

message Profile {
    firstName   string;
    lastName    string;
    birthday    Birthday;
    avatar      int64;
    wallpaper   int64;

    preferedLanguage Language;

	telephone   string;
	info        string;

    complete    bool;
}

message Chat {
    messages    list<string>;
}

enum EventType {
    GENERIC, SYSTEM, USER
}

message Event : GenericObject(ObjectType.EVENT) {
    eventType  EventType, discriminator;
    ip         string;
}

message SystemEvent : Event(EventType.SYSTEM) {
    process     string;
}

message UserEvent : Event(EventType.USER) {
    user    User;
}

enum Sex {
    MALE, FEMALE
}

enum Language {
    EN, RU, FR, DE
}

message Birthday {
    year    int32;
    month   int32;
    day     int32;
}

enum ExceptionType {
    ERROR, AUTH_EXCEPTION
}

exception AppException {
    type    ExceptionType, discriminator;
    text    string;
}

exception AuthException : AppException(ExceptionType.AUTH_EXCEPTION) {}
