module pdef.fixtures;

enum ObjectType {
    OBJECT, USER, POST, PHOTO, NOTE, EVENT;
}

message Id polymorphic on "type" as ObjectType.OBJECT {
    type    ObjectType;
}

message UserId inherits Id as ObjectType.USER {
    value       int64;
}

message PostId inherits Id as ObjectType.POST {}
message PhotoId inherits PostId as ObjectType.PHOTO {
    photoId     int64;
}
message NoteId inherits PostId as ObjectType.NOTE {
    noteId      int64;
}

message GenericObject<ID>
    polymorphic on "type" as ObjectType.OBJECT {
    id          ID;
    type        ObjectType;
    timestamp   int64;
}

message User inherits GenericObject<UserId> as ObjectType.USER {
    name        string;
    age         int32;
    sex         Sex;
    profile     Profile;
    floats      map<string, float>;
    chats       list<Chat>;
}

message Post<ID> inherits GenericObject<ID> as ObjectType.POST {
    userId      UserId;
}

message Photo inherits Post<PhotoId> as ObjectType.PHOTO {
    url         string;
}

message Note inherits Post<NoteId> as ObjectType.NOTE {
    text        string;
}

message Profile {
    firstName   string;
    lastName    string;
    birthday    Birthday;
    avatar      int64;
    wallpaper   int64;

    preferedLanguage Language;

	telephone   string;
	info        string;

    complete    bool;
}

message Chat {
    messages WeightedSet<string, int64>;
}

message EventId inherits Id as ObjectType.EVENT {
    value       int64;
}

enum EventType {
    GENERIC, SYSTEM;
}

message Event
        inherits GenericObject<EventId> as ObjectType.EVENT
        polymorphic on "eventType" as EventType.GENERIC {
    eventType  EventType;
    ip          string;
}

message SystemEvent inherits Event as EventType.SYSTEM {
    process     string;
}

enum Sex {
    MALE, FEMALE;
}

enum Language {
    EN, RU, FR, DE;
}

message Birthday {
    year    int32;
    month   int32;
    day     int32;
}

message Weighted<E, W> {
    element E;
    weight  W;
}

message WeightedSet<E, W> {
    elements list<Weighted<E, W>>;
}
