
{% if base %}
class {{ name }}({{ base.name }}):
{% elif is_exception %}
class {{ name }}(pdef.GeneratedException):
{% else %}
class {{ name }}(pdef.Message):
{% endif %}
    __descriptor__ = pdef.descriptors.message(lambda: {{ name }},
{% if base %}
        base={{ base.name }},
        base_type={{ base_type.name if base_type else None }},
{% endif %}
{% if discriminator_name %}
        discriminator_name="{{ discriminator_name }}",
{% endif %}

{%- if subtypes %}
        subtypes={
{% for subtype, submessage in subtypes %}
            {{ subtype.name }}: lambda: {{ submessage.name }},
{% endfor %}
        },
{% endif %}

{%- if declared_fields %}
        declared_fields=[
{% for field in declared_fields %}
            pdef.descriptors.field('{{ field.name }}', lambda: {{ field.type.descriptor }})
            {%- if not loop.last %}, {% endif %}

{% endfor %}
        ]
{% endif %}
    )

{% if fields %}
    def __init__(self,{% for field in fields %} {{ field.name }}=None,{% endfor %}):
{% else %}
    def __init__(self):
{% endif %}

{%- if inherited_fields %}
        super({{ name }}, self).__init__({% for field in inherited_fields -%}
            {{ field.name }}={{ field.name }}, {% endfor %})
{% elif not declared_fields %}
        pass
{% endif -%}

{% for field in declared_fields %}
        self.{{ field.name }} = {{ field.name }}
{% endfor %}
