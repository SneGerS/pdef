
{%- macro render_descriptor_base() %}
        base={{ base.descriptor }},
        base_type={{ base_type.name if base_type else None }},
{% endmacro %}

{%- macro render_descriptor_subtypes() %}
        subtypes={
        {% for subtype, submessage in subtypes %}
            {{ subtype.name }}: lambda: {{ submessage.name }},
        {% endfor %}
        },
{% endmacro %}

{%- macro render_descriptor_fields() %}
        declared_fields=[
        {% for field in declared_fields %}
            descriptors.field('{{ field.name }}', lambda: {{ field.type.descriptor }}
            {%- if field.is_discriminator -%}
                , is_discriminator=True
            {%- endif %})
            {%- if not loop.last %}, {% endif %}

        {% endfor %}
        ],
{% endmacro -%}


class {{ name }}({{ root_or_base }}):
    __descriptor__ = descriptors.message(lambda: {{ name }},
    {% if base -%}
        {{ render_descriptor_base() }}
    {%- endif %}
    {% if subtypes -%}
        {{ render_descriptor_subtypes() }}
    {%- endif %}
    {% if declared_fields -%}
        {{ render_descriptor_fields() }}
    {%- endif %}
    {% if is_form %}
        is_form=True
    {% endif %}
    )

{% if not fields %}
    def __init__(self):
{% elif fields|length < 5 %}
    def __init__(self, {% for field in fields if not field.is_discriminator -%}
        {{ field.name }}=None
        {%- if loop.last %}): {% else %}, {% endif %}
    {% else %}):
    {% endfor %}

{% else %}
    def __init__(self,
    {% for field in fields if not field.is_discriminator %}
                 {{ field.name }}=None
                 {%- if loop.last %}): {% else %}, {% endif %}

    {% else %}):
    {% endfor %}
{% endif %}

    {%- if inherited_fields %}
        super({{ name }}, self).__init__(
        {%- for field in inherited_fields if not field.is_discriminator %}

            {{ field.name }}={{ field.name }}
            {%- if loop.last %}) {% else %}, {% endif %}
        {% else %})
        {% endfor %}

    {% endif %}

    {%- if not declared_fields and not base_type %}
        pass
    {% endif %}
    {% for field in declared_fields %}
        self.{{ field.name }} = {% if field.is_discriminator -%}
            None
        {%- else -%}
            {{ field.name }}
        {%- endif %}

    {% endfor %}
    {% if base_type %}
        self.{{ discriminator.name }} = {{ base_type }}
    {% endif %}
