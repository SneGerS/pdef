
{%- macro render_descriptor_method(method) %}
            descriptors.method('{{ method.name }}', lambda: {{ method.result.descriptor}}
            {%- if method.is_index -%}
                , is_index=True
            {%- endif %}
            {%- if method.is_post -%}
                , is_post=True
            {%- endif %})
            {%- if not method.args %},
            {% else %}

                {% for arg in method.args %}
                .add_arg('{{ arg.name }}', lambda: {{ arg.type.descriptor }}
                    {%- if arg.is_query %}, is_query=True{% endif -%})
                    {%- if loop.last %}, {% endif %}

                {% endfor %}
            {% endif %}
{% endmacro -%}


class {{ name }}({{ root_or_base }}):
    __descriptor__ = descriptors.interface(lambda: {{ name }},
    {% if base %}
        base={{ base.name }},
    {% endif %}
    {% if exc %}
        exc_supplier=lambda: {{ exc.name }},
    {% endif %}
    {% if declared_methods %}
        declared_methods=[
        {% for method in declared_methods -%}
            {{ render_descriptor_method(method) }}
        {%- endfor %}
        ]
    {% endif %}
    )

{% for method in declared_methods %}
    {% if method.args %}
    def {{ method.name }}(self, {% for arg in method.args -%}
            {{ arg.name }}=None
            {%- if not loop.last %}, {% endif %}
        {% endfor %}):
    {% else %}
    def {{ method.name }}(self):
    {% endif %}
        pass

{% endfor %}
