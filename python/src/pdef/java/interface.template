package {{ package }};

{% macro iface_name(name) -%}
    {%- if async -%}
        {{ async_name }}
    {%- else -%}
        {{ name }}
    {%- endif -%}
{%- endmacro -%}

{% macro method_result(ref) -%}
    {%- if async -%}
        {%- if ref.is_interface -%}
            {{ ref.async_name }}
        {%- else -%}
            rx.Observable<{{ ref.boxed }}>
        {%- endif -%}
    {%- else -%}
        {{ ref }}
    {%- endif -%}
{%- endmacro -%}

{% macro iface_base(base) -%}
    {%- if async -%}
        {{ base.async_name }}
    {%- else -%}
        {{ base }}
    {%- endif -%}
{%- endmacro -%}

{% if doc %}
/** {{ doc }} */
{% endif %}
{% if not bases -%}
    public interface {{ iface_name(name) }} {
{%- else -%}
    public interface {{ iface_name(name) }} extends {% for base in bases -%}
        {{ iface_base(base) }}
        {%- if loop.length > 1 and not loop.last %}, {% endif %}
{%- endfor %} {

{% endif %}

{% for method in declared_methods %}
{% if method.doc %}
    /** {{ method.doc|indent(4) }} */
{% endif %}
{% if method.args|length <= 1 %}
    {{ method_result(method.result) }} {{ method.name }}({% for arg, argtype in method.args -%}
                @io.pdef.Name("{{ arg }}") {{ argtype }} {{ arg }}
                {%- if loop.length > 1 and not loop.last %}, {% endif %}
        {%- endfor %});

{% else %}
    {{ method_result(method.result) }} {{ method.name }}(
{% for arg, argtype in method.args %}
            @io.pdef.Name("{{ arg }}") {{ argtype }} {{ arg }}
            {%- if loop.last %}); {% elif loop.length > 1 %}, {% endif %}

{% endfor %}

{% endif %}
{% endfor %}
}

