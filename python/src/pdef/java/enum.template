package {{package}};

{% if doc %}
/** {{ doc }} */
{% endif %}
public enum {{name}} {
    {% for value in values -%}
        {{value}}{% if not loop.last and loop.length > 1 %}, {% endif %}
    {%- endfor %};

    public static {{ name }} parse(final Object object) {
        return parse((String) object);
    }

    public static {{ name }} parse(final String object) {
        if (object == null) return instance();
        String s = object.toUpperCase();
{% for value in values %}
        if ({{ value }}.name().equals(s)) return {{ value }};
{% endfor %}
        return instance();
    }

    public static String serialize(final {{ name }} object) {
        return object == null ? null : object.name().toLowerCase();
    }

    public static {{ name }} instance() {
        return {{ values[0] }};
    }

    public static final pdef.descriptors.Descriptor<{{ name }}> DESCRIPTOR =
            new pdef.descriptors.Descriptor<{{ name }}>() {
                @Override
                public Class<{{ name }}> getJavaClass() {
                    return {{ name }}.class;
                }

                @Override
                public {{ name }} getDefault() {
                    return {{ name }}.instance();
                }

                @Override
                public {{ name }} parse(final Object object) {
                    return {{ name }}.parse(object);
                }

                @Override
                public Object serialize(final {{ name }} object) {
                    return {{ name }}.serialize(object);
                }
            };
}

